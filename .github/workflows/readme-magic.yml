name: Automagic Readme

on:
  push:
    branches: [ main ]
    paths:
      - 'kotlin/src/main/kotlin/com/vend/fmr/aieng/utils/Demo.kt'
      - 'kotlin/src/main/kotlin/com/vend/fmr/aieng/utils/DemoCategory.kt'
      - 'kotlin/src/main/kotlin/com/vend/fmr/aieng/utils/DemoStatus.kt'
      - 'kotlin/src/main/kotlin/com/vend/fmr/aieng/utils/OperationsLink.kt'
      - 'kotlin/src/main/kotlin/com/vend/fmr/aieng/utils/ReadmeGenerator.kt'
      - 'kotlin/src/main/kotlin/com/vend/fmr/aieng/utils/Tools.kt'
      - 'README.md'
      - 'kotlin/README.md'
      - '.github/workflows/readme-magic.yml'

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    
    steps:
    - name: üõí Fetch the goods
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: ‚òï Brew some Java magic
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: üóÉÔ∏è Stash Maven treasures
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: üéØ Cook up fresh demo lists
      working-directory: ./kotlin
      run: |
        echo "üîç Current directory: $(pwd)"
        echo "üìÅ Files in directory: $(ls -la)"
        echo "‚òï Java version: $(java -version 2>&1 | head -1)"
        
        # Generate internal demos list - default behavior
        echo "üî® Compiling and generating internal demos..."
        mvn -q compile exec:java -Dexec.mainClass="com.vend.fmr.aieng.utils.ReadmeGeneratorKt" -Dexec.classpathScope="compile" > kotlin_demos.md 2>&1 || {
          echo "‚ùå Internal demos generation failed"
          cat kotlin_demos.md
          exit 1
        }
        
        # Generate external demos list (no compile needed)
        echo "üî® Generating external demos..."
        mvn -q exec:java -Dexec.mainClass="com.vend.fmr.aieng.utils.ReadmeGeneratorKt" -Dexec.args="external" -Dexec.classpathScope="compile" > js_demos.md 2>&1 || {
          echo "‚ùå External demos generation failed"
          cat js_demos.md
          exit 1
        }
        
        # Generate operations links list
        echo "üî® Generating operations links..."
        mvn -q exec:java -Dexec.mainClass="com.vend.fmr.aieng.utils.ReadmeGeneratorKt" -Dexec.args="operations" -Dexec.classpathScope="compile" > operations.md 2>&1 || {
          echo "‚ùå Operations links generation failed"
          cat operations.md
          exit 1
        }
        
        # Generate tools list
        echo "üî® Generating tools list..."
        mvn -q exec:java -Dexec.mainClass="com.vend.fmr.aieng.utils.ReadmeGeneratorKt" -Dexec.args="tools" -Dexec.classpathScope="compile" > tools.md 2>&1 || {
          echo "‚ùå Tools list generation failed"
          cat tools.md
          exit 1
        }

    - name: üëÄ Peek at the internal masterpiece
      working-directory: ./kotlin
      run: |
        echo "üìã Generated Internal Demo List:"
        echo "================================"
        cat kotlin_demos.md
        echo "================================"
        echo "üìä Internal demos line count: $(wc -l < kotlin_demos.md)"

    - name: üëÄ Peek at the external masterpiece
      working-directory: ./kotlin
      run: |
        echo "üìã Generated External Demo List:"
        echo "================================"
        cat js_demos.md
        echo "================================"
        echo "üìä External demos line count: $(wc -l < js_demos.md)"

    - name: üëÄ Peek at the cool links
      working-directory: ./kotlin
      run: |
        echo "üìã Generated Operations Links:"
        echo "================================"
        cat operations.md
        echo "================================"
        echo "üìä Operations links line count: $(wc -l < operations.md)"

    - name: üëÄ Peek at the tools list
      working-directory: ./kotlin
      run: |
        echo "üìã Generated Tools List:"
        echo "================================"
        cat tools.md
        echo "================================"
        echo "üìä Tools list line count: $(wc -l < tools.md)"

    - name: ‚ú® Sprinkle README magic
      working-directory: ./kotlin
      run: |
        # Update Kotlin README with internal demos and tools list
        awk '
        BEGIN { in_demo_section = 0; in_tools_section = 0 }
        /<!-- DEMO_LIST_START -->/ { 
          print $0
          while ((getline line < "kotlin_demos.md") > 0) {
            print line
          }
          close("kotlin_demos.md")
          in_demo_section = 1
          next
        }
        /<!-- DEMO_LIST_END -->/ { 
          print $0
          in_demo_section = 0
          next
        }
        /<!-- TOOLS_LIST_START -->/ { 
          print $0
          while ((getline line < "tools.md") > 0) {
            print line
          }
          close("tools.md")
          in_tools_section = 1
          next
        }
        /<!-- TOOLS_LIST_END -->/ { 
          print $0
          in_tools_section = 0
          next
        }
        !in_demo_section && !in_tools_section { print $0 }
        ' README.md > README_new.md
        
        # Replace the Kotlin README
        mv README_new.md README.md
        
        # Update Parent README with internal demos, external demos, and operations links
        awk '
        BEGIN { in_internal_section = 0; in_external_section = 0; in_operations_section = 0 }
        /<!-- KOTLIN_DEMOS_START -->/ { 
          print $0
          while ((getline line < "kotlin_demos.md") > 0) {
            print line
          }
          close("kotlin_demos.md")
          in_internal_section = 1
          next
        }
        /<!-- KOTLIN_DEMOS_END -->/ { 
          print $0
          in_internal_section = 0
          next
        }
        /<!-- JS_DEMOS_START -->/ { 
          print $0
          while ((getline line < "js_demos.md") > 0) {
            print line
          }
          close("js_demos.md")
          in_external_section = 1
          next
        }
        /<!-- JS_DEMOS_END -->/ { 
          print $0
          in_external_section = 0
          next
        }
        /<!-- OPERATIONS_START -->/ { 
          print $0
          while ((getline line < "operations.md") > 0) {
            print line
          }
          close("operations.md")
          in_operations_section = 1
          next
        }
        /<!-- OPERATIONS_END -->/ { 
          print $0
          in_operations_section = 0
          next
        }
        !in_internal_section && !in_external_section && !in_operations_section { print $0 }
        ' ../README.md > ../README_new.md
        
        # Replace the parent README
        mv ../README_new.md ../README.md
        
        # Clean up
        rm kotlin_demos.md js_demos.md operations.md tools.md

    - name: üîç Detective work for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: üìù Sign the guestbook
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md kotlin/README.md
        git commit -m "ü§ñ Auto-update README demo lists

        Updated demo lists based on latest changes to Demo.kt
        
        Co-Authored-By: ReadmeGenerator <noreply@github.com>"

    - name: üöÄ Launch into orbit
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git push origin main