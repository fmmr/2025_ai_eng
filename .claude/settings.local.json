{
  "permissions": {
    "allow": [
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -i \"gpt-4|gpt-3.5|text-embedding-ada|dall-e-2|dall-e-3\" --type-add 'web:*.{html,js,css}' --type-add 'config:*.{properties,yml,yaml}' -t kotlin -t java -t web -t config)",
      "Bash(OPENAI_API_KEY=sk-proj-test POLYGON_API_KEY=test HF_TOKEN=test SUPABASE_URL=test SUPABASE_ANON_KEY=test mvn test -q)",
      "Bash(cp:*)",
      "Bash(curl:*)",
      "Bash(docker build -t kotlin-app .)",
      "Bash(docker build:*)",
      "Bash(docker logs:*)",
      "Bash(docker rm:*)",
      "Bash(docker run:*)",
      "Bash(find:*)",
      "Bash(git add:*)",
      "Bash(grep:*)",
      "Bash(jar tf:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(mvn:*)",
      "Bash(pkill:*)",
      "Bash(rg:*)",
      "Bash(rm:*)",
      "Bash(sed:*)",
      "Bash(timeout 10 java:*)",
      "Bash(timeout:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:docs.langchain4j.dev)",
      "WebFetch(domain:getbootstrap.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:huggingface.co)",
      "WebFetch(domain:localhost:8080)",
      "WebFetch(domain:ai.rodland.no)",
      "WebFetch(domain:www.anthropic.com)",
      "WebFetch(domain:api.met.no)",
      "Bash(git checkout:*)",
      "WebFetch(domain:api.met.no)",
      "WebFetch(domain:ipapi.co)",
      "WebFetch(domain:icons.getbootstrap.com)",
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg:*)",
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"class.*Controller.*: BaseController\" --line-number)",
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"import com.vend.fmr.aieng.utils.Demo\" src/main/kotlin/com/vend/fmr/aieng/web/)",
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"class.*Controller.*: BaseController\\(Demo\\.(FUNCTION_CALLING|REACT_AGENT|GPT4_VISION|FILM_FUSION|IMAGE_EDITING|SPRING_AI|LANGCHAIN4J)\\)\" --line-number)",
      "Bash(npm test)",
      "WebFetch(domain:simpleicons.org)",
      "WebFetch(domain:simpleicons.org)",
      "WebFetch(domain:simpleicons.org)",
      "WebFetch(domain:simpleicons.org)",
      "WebFetch(domain:simpleicons.org)",
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -c \"OpenAI\\(\" /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin --include=\"*Controller.kt\")",
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -c \"OpenAI\\(\" /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin -g \"*Controller.kt\")",
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"import.*\\.openAI|import.*\\.huggingface|import.*\\.polygon|import.*\\.supabase|import.*\\.assistant\" *.kt)",
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"com\\.vend\\.fmr\\.aieng\\.openAI|com\\.vend\\.fmr\\.aieng\\.huggingface|com\\.vend\\.fmr\\.aieng\\.polygon|com\\.vend\\.fmr\\.aieng\\.supabase|com\\.vend\\.fmr\\.aieng\\.assistant\" *.kt)",
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"\\.openAI|\\.huggingface|\\.polygon|\\.supabase|\\.assistant\" *.kt)",
      "Bash(/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"openAI\\.|huggingface\\.|polygon\\.|supabase\\.|assistant\\.\" *.kt)",
      "WebFetch(domain:api.nasa.gov)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(if /Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -q \"BaseController\" \"$file\")",
      "Bash(then)",
      "Bash(if ! /Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -q \"@RequestMapping\" \"$file\")",
      "Bash(echo:*)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(# Fix VisionController\nsed -i '' '/import org.springframework.web.bind.annotation.PostMapping/a\\\nimport org.springframework.web.bind.annotation.RequestMapping' /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web/VisionController.kt\n\nsed -i '' 's/@Controller$/@Controller\\\n@RequestMapping(\"\\/demo\\/gpt4-vision\")/' /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web/VisionController.kt\n\nsed -i '' 's|@PostMapping(\"/demo/gpt4-vision\")|@PostMapping|g' /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web/VisionController.kt\n\necho \"Fixed VisionController\")",
      "Bash(#!/opt/homebrew/bin/bash\n\n# Fix the import issue in VisionController first\nsed -i '' 's/RequestMappingimport/RequestMapping\\\nimport/' /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web/VisionController.kt\n\n# Now create the script to fix all controllers\ncat > fix_controllers.sh << 'EOF'\n#!/opt/homebrew/bin/bash\n\ndeclare -A controllers=(\n    [\"ImageEditingController\"]=\"/demo/image-editing\"\n    [\"TemperatureController\"]=\"/demo/temperature\"\n    [\"TopPController\"]=\"/demo/top-p\"\n    [\"SpringAiController\"]=\"/demo/spring-ai\"\n    [\"LangChain4jController\"]=\"/demo/langchain4j\"\n    [\"HuggingFaceClassificationController\"]=\"/demo/huggingface-classification\"\n    [\"HuggingFaceObjectDetectionController\"]=\"/demo/huggingface-object-detection\"\n    [\"HuggingFaceSummarizationController\"]=\"/demo/huggingface-summarization\"\n    [\"McpServerController\"]=\"/demo/mcp-server\"\n)\n\nbase_path=\"/Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web\"\n\nfor controller in \"${!controllers[@]}\"; do\n    mapping=${controllers[$controller]}\n    file=\"$base_path/${controller}.kt\"\n    \n    if [ -f \"$file\" ]; then\n        echo \"Fixing $controller...\"\n        \n        # Add RequestMapping import\n        if ! grep -q \"RequestMapping\" \"$file\"; then\n            sed -i '' '/import org.springframework.web.bind.annotation\\./a\\\nimport org.springframework.web.bind.annotation.RequestMapping' \"$file\"\n        fi\n        \n        # Add @RequestMapping annotation\n        sed -i '' \"s/@Controller$/@Controller\\\n@RequestMapping(\\\"$mapping\\\")/\" \"$file\"\n        \n        # Update endpoint mappings\n        sed -i '' \"s|@PostMapping(\\\"$mapping\\\")|@PostMapping|g\" \"$file\"\n        sed -i '' \"s|@GetMapping(\\\"$mapping\\\")|@GetMapping|g\" \"$file\"\n        \n    else\n        echo \"File not found: $file\"\n    fi\ndone\n\necho \"All controllers fixed!\"\nEOF\n\nchmod +x fix_controllers.sh && ./fix_controllers.sh)",
      "Bash(# Fix HuggingFaceObjectDetectionController\nfile=\"/Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web/HuggingFaceObjectDetectionController.kt\"\n\n# Add RequestMapping import and annotation\nsed -i '' '/import org.springframework.web.bind.annotation\\./a\\\nimport org.springframework.web.bind.annotation.RequestMapping' \"$file\"\n\nsed -i '' 's/@Controller$/@Controller\\\n@RequestMapping(\"\\/demo\\/huggingface-object-detection\")/' \"$file\"\n\n# Fix the mappings\nsed -i '' 's|@GetMapping(\"/demo/huggingface-object-detection\")|@GetMapping|g' \"$file\"\nsed -i '' 's|@PostMapping(\"/demo/huggingface-object-detection\")|@PostMapping|g' \"$file\"\n\necho \"Fixed HuggingFaceObjectDetectionController\")",
      "Bash(# Fix FilmFusionController GetMapping\n/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l '@GetMapping.*film-fusion' /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web/FilmFusionController.kt\nif [ $? -eq 0 ]; then\n  sed -i '' 's|@GetMapping(\"/demo/film-fusion\")|@GetMapping|g' /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web/FilmFusionController.kt\n  echo \"Fixed FilmFusionController GetMapping\"\nfi)",
      "Bash(# Create audit script to check demo consistency\ncat > demo_audit.txt << 'EOF'\nDEMO NAMING CONSISTENCY AUDIT\n============================\n\nExpected Pattern:\n- Demo.id: \"film-fusion\"  \n- Demo.route: \"/demo/film-fusion\"\n- Controller: FilmFusionController\n- @RequestMapping: \"/demo/film-fusion\" \n- Controller return: \"film-fusion\"\n- Template: film-fusion.html\n- JS file: film-fusion.js\n\nCurrent Issues Found:\nEOF\n\n# Check a few key demos to understand the current pattern\necho \"FILM_FUSION audit:\" >> demo_audit.txt\n/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -A1 -B1 \"FILM_FUSION\" /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/utils/Demo.kt >> demo_audit.txt\n\necho -e \"\\nFilmFusionController findings:\" >> demo_audit.txt  \n/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"@RequestMapping\\|return.*\\\"\" /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web/FilmFusionController.kt >> demo_audit.txt\n\necho -e \"\\nTemplate files:\" >> demo_audit.txt\nls /Users/fmr/projects/2025_ai_eng/kotlin/src/main/resources/templates/ | grep film >> demo_audit.txt\n\necho -e \"\\nJS files:\" >> demo_audit.txt  \nls /Users/fmr/projects/2025_ai_eng/kotlin/src/main/resources/static/js/ | grep film >> demo_audit.txt\n\ncat demo_audit.txt)",
      "Bash(# Simple audit of FilmFusion demo\necho \"=== FILM_FUSION Demo Audit ===\"\necho \"1. Demo enum id:\"\n/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -A1 \"FILM_FUSION\" /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/utils/Demo.kt\n\necho -e \"\\n2. Controller RequestMapping:\"\n/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"@RequestMapping\" /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web/FilmFusionController.kt\n\necho -e \"\\n3. Controller return values:\"\n/Users/fmr/.nvm/versions/node/v23.11.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"return.*\\\"\" /Users/fmr/projects/2025_ai_eng/kotlin/src/main/kotlin/com/vend/fmr/aieng/web/FilmFusionController.kt\n\necho -e \"\\n4. Template files:\"\nls /Users/fmr/projects/2025_ai_eng/kotlin/src/main/resources/templates/ | grep -i film\n\necho -e \"\\n5. JS files:\"\nls /Users/fmr/projects/2025_ai_eng/kotlin/src/main/resources/static/js/ | grep -i film)",
      "Bash(git mv:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}